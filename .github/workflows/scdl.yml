name: SoundCloud Sync

on:
  workflow_dispatch:
    inputs:
      # Eingabefelder für benutzerdefinierte Parameter
      sc_url:
        description: 'SoundCloud Playlist oder Benutzer URL'
        required: true
        default: 'https://soundcloud.com/psylobrain/sets/psyauto'
        
      maxtracks:
        description: 'Anzahl der letzten Tracks (0 für alle)'
        required: false
        default: '10'
        
      download_archive:
        description: 'Archiv-Datei für den Download-Verlauf'
        required: false
        default: 'scdl_downloads.txt'

      download_path:
        description: 'Pfad zum Speichern der Dateien'
        required: false
        default: 'songs'

      # Checkboxen für zusätzliche Optionen
      sync:
        description: 'Nur neue/aktualisierte Tracks herunterladen (Synchronisation)'
        required: false
        default: true
        type: boolean

      onlymp3:
        description: 'Nur MP3-Dateien herunterladen'
        required: false
        default: true
        type: boolean

      max_size:
        description: 'Maximale Trackgröße (z.B. 100m für 100 MB)'
        required: false
        default: '100m'

      name_format:
        description: 'Dateinamen-Format (Standard: Künstler - Titel)'
        required: false
        default: '%artist% - %title%'

      force_metadata:
        description: 'Metadaten auch bei bereits heruntergeladenen Dateien setzen'
        required: false
        default: false
        type: boolean

      add_timestamp:
        description: 'Timestamp zum Dateinamen hinzufügen'
        required: false
        default: false
        type: boolean

      convert_flac:
        description: 'FLAC-Dateien nach MP3 konvertieren'
        required: false
        default: false
        type: boolean

jobs:
  sync-songs:
    runs-on: ubuntu-latest

    steps:
    # 1. Repository klonen
    - name: Checkout Repository
      uses: actions/checkout@v3

    # 2. Installiere Python, ffmpeg und scdl
    - name: Install Dependencies (Python, ffmpeg, scdl)
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip ffmpeg
        pip install scdl

    # 3. Setze anpassbare Variablen für scdl-Optionen
    - name: Set variables for scdl options
      run: |
        export SC_URL="${{ github.event.inputs.sc_url }}"
        export SC_MAXTRACKS="${{ github.event.inputs.maxtracks }}"
        export SC_DOWNLOAD_ARCHIVE="${{ github.event.inputs.download_archive }}"
        export SC_DOWNLOAD_PATH="${{ github.event.inputs.download_path }}"
        export SC_ADDITIONAL_OPTIONS=""
        
        if [[ "${{ github.event.inputs.sync }}" == "true" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --sync"
        fi
        
        if [[ "${{ github.event.inputs.onlymp3 }}" == "true" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --onlymp3"
        fi

        if [[ -n "${{ github.event.inputs.max_size }}" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --max-size ${{ github.event.inputs.max_size }}"
        fi

        if [[ -n "${{ github.event.inputs.name_format }}" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --name-format ${{ github.event.inputs.name_format }}"
        fi

        if [[ "${{ github.event.inputs.force_metadata }}" == "true" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --force-metadata"
        fi

        if [[ "${{ github.event.inputs.add_timestamp }}" == "true" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --addtimestamp"
        fi

        if [[ "${{ github.event.inputs.convert_flac }}" == "true" ]]; then
          SC_ADDITIONAL_OPTIONS="$SC_ADDITIONAL_OPTIONS --flac"
        fi

    # 4. SoundCloud-Songs synchronisieren
    - name: Sync Songs
      run: |
        mkdir -p $SC_DOWNLOAD_PATH
        scdl -l "$SC_URL" $SC_ADDITIONAL_OPTIONS

    # 5. Prüfen, ob Änderungen existieren
    - name: Check for changes
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "Keine neuen Songs. Beende Workflow."
          exit 0
        fi

    # 6. Neue Lieder auflisten und in Nebenspeicher.txt speichern
    - name: List new songs and save to file
      run: |
        NEW_FILES=$(git status --porcelain | grep "^A " | awk '{print $2}')
        
        if [ -z "$NEW_FILES" ]; then
          echo "Keine neuen Songs zum Auflisten."
          exit 0
        fi

        # Erstelle eine Liste der neuen Lieder
        echo "Neue Lieder von SoundCloud:" > Nebenspeicher/neue_lieder.txt
        echo "$NEW_FILES" | sed 's/^/- /' >> Nebenspeicher/neue_lieder.txt

    # 7. Änderungen committen und pushen
    - name: Commit and Push Changes
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Commit-Message erstellen mit neuen Liedern
        COMMIT_MESSAGE="Sync neue Lieder von SoundCloud:\n\n$(echo "$NEW_FILES" | sed 's/^/- /')"

        git add songs/ Nebenspeicher/neue_lieder.txt
        git commit -m "$COMMIT_MESSAGE"
        git push origin HEAD:main
